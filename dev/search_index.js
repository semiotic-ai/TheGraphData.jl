var documenterSearchIndex = {"docs":
[{"location":"querying/#Querying-Clients","page":"Querying Clients","title":"Querying Clients","text":"","category":"section"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"In order to query data, this package must have access to a valid GraphQL client. By default, this client is the gateway (https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet). However, you can change the client to another.","category":"page"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"julia> client!(\"mynewclient.com/endpoint\")","category":"page"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"TheGraphData.client!","category":"page"},{"location":"querying/#TheGraphData.client!","page":"Querying Clients","title":"TheGraphData.client!","text":"client!(u::AbstractString)\nclient!(c::GraphQLClient.Client)\n\nSet the provided url (u) or client (c) as the new global client.\n\n\n\n\n\n","category":"function"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"This sets the global client, so all subsequent calls to querying function do not need you to track and pass the client around.","category":"page"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"After ensuring that you've correctly set the client Client, you can now query the client for data.","category":"page"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"julia> qvalue = \"subgraphDeployments\"\njulia> qargs = Dict(\"first\" => 1000, \"orderBy\" => \"signalledTokens\")\njulia> qfields = [\"ipfsHash\"]\njulia> query(qvalue, qargs, qfields)","category":"page"},{"location":"querying/","page":"Querying Clients","title":"Querying Clients","text":"TheGraphData.query","category":"page"},{"location":"querying/#TheGraphData.query","page":"Querying Clients","title":"TheGraphData.query","text":"query(v::AbstractString, a::Dict, f::AbstractVector{S}) where {S<:AbstractString}\n\nQuery the client for value v with arguments a and fields f.\n\nBy default, the client is the gateway. This function returns a vector of dictionaries.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TheGraphData","category":"page"},{"location":"#TheGraphData","page":"Home","title":"TheGraphData","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package aims to simplify querying and transforming data read from The Graph Protocol. You'll get best use out of this package by composing its functions.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Download Julia 1.8 or greater. Install this package by running ] add TheGraphData from the julia REPL.","category":"page"}]
}
